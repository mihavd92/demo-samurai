{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/News/News.jsx","utils/object-helper.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsConstrols/FormsControls.js","components/common/FormsConstrols/FormsControls.module.css","utils/validators/validators.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Header","props","className","s","header","header__img","src","loginBlock","isAuth","onClick","to","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","item","activeClassName","activeLink","active","Settings","Music","News","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","styles","paginator","p","cn","selectedPage","pageNumber","key","e","User","user","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","compose","bind","page","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","backgroundColor","preloader","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.a910bdf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1ciUN\",\"item\":\"Navbar_item__3PP_f\",\"activeLink\":\"Navbar_activeLink__2WO5A\"};","\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Mihalych'},\r\n        {id: 2, name: 'Petya'},\r\n        {id: 3, name: 'Inna'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Vitalik'},\r\n        {id: 6, name: 'Vova'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__13bzG\"};","module.exports = __webpack_public_path__ + \"static/media/user.08e6ccaf.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.1a53c753.svg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"aea05588-db72-40e5-a4c6-16f9d6eff4cd\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\nreturn <header className={s.header}>\r\n    <img className={s.header__img} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Gulf_logo.png/660px-Gulf_logo.png\"></img>\r\n\r\n    <div className={ s.loginBlock }>\r\n        { props.isAuth\r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n            : <NavLink to={'/login'}>Login</NavLink>  }\r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: true\r\n};\r\n\r\nconst  authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth} });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ?\r\n            response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\n\r\nconst Settings = (props) => {\r\n   return (\r\n       <div>\r\n           Settings\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = (props) => {\r\n   return (\r\n       <div>\r\n           Music\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\n\r\nconst News = (props) => {\r\n   return (\r\n       <div>\r\n           News\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default News;","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={ () => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter( p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n    { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                 className={styles.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter( u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends  React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsConstrols/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsConstrols/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst  appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise =  dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","\r\n\r\nlet initialState = { };\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {withRouter, Route, BrowserRouter} from \"react-router-dom\";\nimport Navbar from './components/Navbar/Navbar';\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)}/>\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                        </div>\n                    </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;\n\n\n\n\n\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n\n\n\n\n\n\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n    <Field placeholder={placeholder}\r\n           name={name}\r\n           validate={validators}\r\n           component={component}\r\n           {...props}\r\n    /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3LkCz\",\"error\":\"FormsControls_error__s3ukk\",\"formSummaryError\":\"FormsControls_formSummaryError__1faay\"};","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ { backgroundColor: 'white' } } >\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2qpWJ\",\"header__img\":\"Header_header__img__USjKO\",\"loginBlock\":\"Header_loginBlock__CaL3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__17lqO\",\"pageNumber\":\"Paginator_pageNumber__1mGLp\",\"selectedPage\":\"Paginator_selectedPage__35U-c\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'Its my first post', likesCount: 13},\r\n        {id: 2, message: 'Go go', likesCount: 15},\r\n        {id: 2, message: 'Happy Day =)', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}
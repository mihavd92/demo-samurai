{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialog","message","DialogItem","path","id","active","to","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","messaqes","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,SAAW,0BAA0B,QAAU,2B,uFCMxMC,EAJC,SAACC,GACb,OAAO,yBAAKC,UAAWC,IAAEC,QAASH,EAAMI,U,QCU7BC,EAVI,SAACL,GAEhB,IAAIM,EAAO,YAAcN,EAAMO,GAG/B,OAAO,yBAAKN,UAAWC,IAAEC,OAAS,IAAMD,IAAEM,QACtC,kBAAC,IAAD,CAASC,GAAIH,GAAON,EAAMU,Q,yCCL5BC,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAhBQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZZ,KAAK,oBAEhB,6BACI,6CCoBDa,EA5BC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEtB,GAAIA,GAAIsB,EAAEtB,QACpFwB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS7B,QAAS6B,EAAE7B,QAAS0B,IAAKG,EAAE1B,QAC9DiB,EAAMU,eAO3B,OAAKlC,EAAMmC,OAGP,yBAAKlC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEkC,cACbV,GAEL,yBAAKzB,UAAWC,IAAEmC,UACd,6BAAMN,IAEV,kBAAC,EAAD,CAAgBhB,SAdJ,SAACuB,GACjBtC,EAAMuC,YAAYD,EAAOJ,oBAGH,kBAAC,IAAD,CAAUzB,GAAI,Y,wCCjBxC+B,EAA6B,SAAChB,GAAD,MAAY,CACzCW,OAAQX,EAAMiB,KAAKN,S,OCkBRO,sBACXC,aAhBkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACmB,GACtB,MAAO,CACHL,YAAa,SAACL,GACVU,EAASC,YAAmBX,UDTR,SAACY,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKhD,MAAMmC,OAET,kBAACW,EAAcE,KAAKhD,OAFI,kBAAC,IAAD,CAAUS,GAAG,eAJT,GAEXwC,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCK9DL,CAGbnB","file":"static/js/4.e50d9682.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2bI3z\",\"dialogsItems\":\"Dialogs_dialogsItems__1boEY\",\"active\":\"Dialogs_active__3TfSS\",\"messaqes\":\"Dialogs_messaqes__1cxS4\",\"messages\":\"Dialogs_messages__22oKW\",\"message\":\"Dialogs_message__2uFKR\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsConstrols/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message'\r\n                       name='newMessageBody' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'}) (AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messaqes}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}